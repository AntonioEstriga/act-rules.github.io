{"version":3,"sources":["webpack:///./src/pages/glossary.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["data","glossaryData","site","edges","updatedTitle","siteMetadata","title","keywords","className","map","node","frontmatter","html","key","usedInRules","glossaryUsages","id","href","dangerouslySetInnerHTML","__html","getGlossaryUsageInRules","query","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","O","keys","length","i","result","call","push","$export","$find","forced","Array","P","F","find","callbackfn","this","arguments","undefined","$entries","S","entries"],"mappings":"0FAAA,mGAOe,sBAAe,IAAZA,EAAW,EAAXA,KACTC,EAAuBD,EAAvBC,aAAcC,EAASF,EAATE,KACdC,EAAUF,EAAVE,MACFC,EAAY,cAAiBF,EAAKG,aAAaC,MAErD,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAKA,MAAOF,EAAcG,SAAUL,EAAKG,aAAaE,WACtD,6BAASC,UAAU,gCAClB,wCACA,6BAASA,UAAU,WACjBL,EAAMM,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACLC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAQF,EAARE,IACFC,EAAcC,EAAe,IAAIF,GACvC,OACC,6BAASA,IAAKH,EAAKM,IAClB,iCACC,uBAAGA,GAAIH,EAAKI,KAAI,IAAMJ,GACrB,4BAAKF,EAAYL,QAElB,mCAASO,GACT,yBAAKK,wBAAyB,CAAEC,OAAQP,MAExCQ,YAAwBN,UAU1B,IAAMO,EAAK,a,oBCzClB,IAAIC,EAAc,EAAQ,GACtBC,EAAU,EAAQ,IAClBC,EAAY,EAAQ,IACpBC,EAAS,EAAQ,IAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUC,GAOf,IANA,IAKIjB,EALAkB,EAAIP,EAAUM,GACdE,EAAOT,EAAQQ,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdrB,EAAMmB,EAAKE,KACNZ,IAAeG,EAAOW,KAAKL,EAAGlB,IACjCsB,EAAOE,KAAKR,EAAY,CAAChB,EAAKkB,EAAElB,IAAQkB,EAAElB,IAG9C,OAAOsB,K,iCChBX,IAAIG,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,GAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,KAAE,WAAcD,GAAS,IACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CI,KAAM,SAAcC,GAClB,OAAON,EAAMO,KAAMD,EAAYE,UAAUd,OAAS,EAAIc,UAAU,QAAKC,MAGzE,EAAQ,GAAR,CATU,S,oBCHV,IAAIV,EAAU,EAAQ,GAClBW,EAAW,EAAQ,IAAR,EAA8B,GAE7CX,EAAQA,EAAQY,EAAG,SAAU,CAC3BC,QAAS,SAAiBrB,GACxB,OAAOmB,EAASnB","file":"component---src-pages-glossary-js-9ca367efe222c2485225.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/'\nimport SEO from '../components/seo'\nimport { getGlossaryUsageInRules } from './../utils/render-fragments'\nimport glossaryUsages from './../../_data/glossary-usages.json'\n\nexport default ({ data }) => {\n\tconst { glossaryData, site } = data\n\tconst { edges } = glossaryData\n\tconst updatedTitle = `Glossary | ${site.siteMetadata.title}`\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-container page-glossary\">\n\t\t\t\t<h1>Glossary</h1>\n\t\t\t\t<section className=\"listing\">\n\t\t\t\t\t{edges.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\t\t\tconst { key } = frontmatter\n\t\t\t\t\t\tconst usedInRules = glossaryUsages[`#${key}`]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t\t\t\t<h2>{frontmatter.title}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<i>key: {key}</i>\n\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t{getGlossaryUsageInRules(usedInRules)}\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\tglossaryData: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}