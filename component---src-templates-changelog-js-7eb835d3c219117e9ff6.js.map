{"version":3,"sources":["webpack:///./src/templates/changelog.js","webpack:///./src/utils/render-fragments.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["getChangelogTabulation","changelog","url","file","length","className","map","log","hash","commit","msg","date","changesUrl","key","nowrap","getDateTimeFromUnixTimestamp","align","target","rel","href","title","xmlns","x","y","width","height","viewBox","d","data","site","context","sitePage","pageTitle","fastmatterAttributes","frontmatter","fileName","relativePath","JSON","parse","ruleId","id","name","ruleChangelog","actRulesRepoUrl","siteMetadata","actRulesPackage","repository","to","query","getImplementationsTabulation","implementers","cls","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","getImplementationsLink","slug","replace","implementationMetrics","getImplementations","getImplementationsCount","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","edges","node","html","dangerouslySetInnerHTML","__html","getGlossaryUsedLink","keys","Object","glossaryUsages","forEach","getRuleType","rule_type","getAccessibilityRequirements","accessibility_requirements","type","conformanceRequirements","entries","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","ariaListing","sc","scData","scUrls","num","handle","wcagType","level","wcagListing","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","find","rule","fields","getRuleUsageInRules","usages","rulesUsages","usage","unixtimestamp","Date","year","getFullYear","getMonth","getDate","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","i","result","call"],"mappings":"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","file":"component---src-templates-changelog-js-7eb835d3c219117e9ff6.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql, Link } from 'gatsby'\nimport SEO from '../components/seo'\nimport { getDateTimeFromUnixTimestamp } from '../utils/render-fragments'\n\nconst changesSvgIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"16px\" height=\"16px\" viewBox=\"0 0 31.568 31.568\">\n\t\t\t<g>\n\t\t\t\t<g>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M1.889,31.568h8.282V0H1.889V31.568z M4.021,2.958h4.016V9.65H4.021V2.958z M4.021,11.964h4.016v2.776H4.021V11.964z\n          M6.029,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C4.021,25.494,4.92,24.596,6.029,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M11.643,31.568h8.282V0h-8.282V31.568z M13.777,2.958h4.016V9.65h-4.016V2.958z M13.777,11.964h4.016v2.776h-4.016V11.964\n          z M15.784,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C13.777,25.494,14.676,24.596,15.784,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M21.397,0v31.568h8.282V0H21.397z M25.539,28.611c-1.108,0-2.008-0.9-2.008-2.008c0-1.11,0.898-2.008,2.008-2.008\n          c1.11,0,2.009,0.897,2.009,2.008C27.548,27.711,26.648,28.611,25.539,28.611z M27.548,14.74h-4.017v-2.776h4.017V14.74z\n          M27.548,9.651h-4.017V2.958h4.017V9.651z\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t)\n}\n\nconst getChangelogTabulation = (changelog, url, file) => {\n\tif (!changelog.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<table className=\"compact\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t<th>See Changes</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{changelog.map(log => {\n\t\t\t\t\tconst { commit: hash, msg, date } = log\n\t\t\t\t\tconst changesUrl = `${url}/commit/${hash}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={hash}>\n\t\t\t\t\t\t\t<td nowrap=\"true\">{getDateTimeFromUnixTimestamp(date)}</td>\n\t\t\t\t\t\t\t<td>{msg}</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={changesUrl} title=\"See all changes in commit\">\n\t\t\t\t\t\t\t\t\t{changesSvgIcon()}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nexport default ({ data }) => {\n\tconst { site, sitePage } = data\n\tconst { context } = sitePage\n\tconst { title: pageTitle, fastmatterAttributes, changelog, fileName } = context\n\n\tconst { relativePath: ruleMarkdownFileName } = fileName\n\n\tconst frontmatter = JSON.parse(fastmatterAttributes)\n\tconst { id: ruleId, name } = frontmatter\n\n\tconst ruleChangelog = JSON.parse(changelog)\n\tconst {\n\t\trepository: { url: actRulesRepoUrl },\n\t} = JSON.parse(site.siteMetadata.actRulesPackage)\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={pageTitle} />\n\t\t\t<section className=\"page-container page-rule-changelog\">\n\t\t\t\t<h1>{pageTitle}</h1>\n\n\t\t\t\t{/* changelog */}\n\t\t\t\t{getChangelogTabulation(ruleChangelog, actRulesRepoUrl, `_rules/${ruleMarkdownFileName}`)}\n\n\t\t\t\t{/* backlink to rule */}\n\t\t\t\t<br />\n\n\t\t\t\t<Link to={`/rules/${ruleId}`}>See Rule: {name}</Link>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($path: String!) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tchangelog\n\t\t\t\tfastmatterAttributes\n\t\t\t\tfileName {\n\t\t\t\t\trelativePath\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tactRulesPackage\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}