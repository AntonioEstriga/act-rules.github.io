{"version":3,"sources":["webpack:///./src/templates/implementations.js","webpack:///./src/components/note.js","webpack:///./utils/get-hyphenated-string.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/list-of-implementers.js"],"names":["Implementations","location","data","markdownRemark","html","frontmatter","title","className","implementers","dangerouslySetInnerHTML","__html","query","Note","cls","body","classnames","module","exports","givenString","lowercase","result","split","join","toLowerCase","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","ListOfImplementers","ruleId","map","organisation","toolName","filename","getHyphenatedString","reportUrl","href"],"mappings":"8FAAA,sHA+BeA,UAtBS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAqB,IAAXC,KACDC,eAA3BC,EADuC,EACvCA,KAAMC,EADiC,EACjCA,YAEd,OACC,kBAAC,IAAD,CAAQJ,SAAUA,GACjB,kBAAC,IAAD,CAAKK,MAAOD,EAAYC,QACxB,6BAASC,UAAU,kBAClB,4BAAKF,EAAYC,OAGjB,iCACC,uDACA,kBAAC,IAAD,CAAoBE,aAAcA,KAInC,yBAAKC,wBAAyB,CAAEC,OAAQN,QAQrC,IAAMO,EAAK,c,kCCjClB,wDAqBeC,IAfF,SAAC,GAAyC,IAAD,IAAtCC,WAAsC,MAAhC,GAAgC,MAA5BP,aAA4B,MAApB,GAAoB,MAAhBQ,YAAgB,MAAT,GAAS,EACrD,OACC,yBAAKP,UAAWQ,IAAW,OAAQF,IAClC,2BAAIP,GACJ,2BAAIQ,M,+BCAPE,EAAOC,QAVqB,SAACC,EAAaC,QAAqB,IAArBA,OAAY,GACrD,IAAMC,EAASF,EAAYG,MAAM,KAAKC,KAAK,KAE3C,OAAKH,EAIEC,EAAOG,cAHNH,I,qBCJT,QAAQ,QASR,WACE,aAEA,IAAII,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIM,KAAOP,EACVP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BX,EAAQM,KAAKK,IAMrB,OAAOX,EAAQL,KAAK,KAGeN,EAAOC,SAC1CS,EAAoB,QAAIA,EACxBV,EAAOC,QAAUS,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL,I,kCCTA,0DAgDec,IAzCY,SAAC,GAAkD,IAAD,IAA/ChC,oBAA+C,MAAhC,GAAgC,MAA5BK,WAA4B,eAAlB4B,cAAkB,WAC5E,OAAKjC,EAAasB,OAOjB,2BAAOvB,UAAWM,GACjB,+BACC,4BACC,4CACA,yCACA,wCAGF,+BACEL,EAAakC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC5BC,EAAWC,IAAoBF,GAC/BG,EAAYN,EAAM,mBAAsBI,EAAtB,IAAkCJ,EAAlC,mBAAgEI,EACxF,OACC,wBAAIP,IAAKM,GACR,4BAAKA,GACL,4BAAKD,GACL,4BACC,uBAAGK,KAAMD,GAAT,sBAtBL,kBAAC,IAAD,CAAMlC,IAAG,GAAMP,MAAK,qBAAwBQ,KAAI,6D","file":"component---src-templates-implementations-js-34e88f17314a4fb2aef9.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ListOfImplementers from '../components/list-of-implementers'\n\nimport implementers from './../../_data/implementers'\n\nconst Implementations = ({ location, data }) => {\n\tconst { html, frontmatter } = data.markdownRemark\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={frontmatter.title} />\n\t\t\t<section className=\"page-container\">\n\t\t\t\t<h1>{frontmatter.title}</h1>\n\n\t\t\t\t{/* Inject list of implementations table  */}\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Implementation Overview</h2>\n\t\t\t\t\t<ListOfImplementers implementers={implementers} />\n\t\t\t\t</section>\n\n\t\t\t\t{/* Render the rest of th page  */}\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Implementations\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './note.scss'\n\nconst Note = ({ cls = '', title = '', body = '' }) => {\n\treturn (\n\t\t<div className={classnames('note', cls)}>\n\t\t\t<b>{title}</b>\n\t\t\t<p>{body}</p>\n\t\t</div>\n\t)\n}\n\nNote.propTypes = {\n\tcls: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tbody: PropTypes.string.isRequired,\n}\n\nexport default Note\n","const getHyphenatedString = (givenString, lowercase = true) => {\n\tconst result = givenString.split(' ').join('-')\n\n\tif (!lowercase) {\n\t\treturn result\n\t}\n\n\treturn result.toLowerCase()\n}\n\nmodule.exports = getHyphenatedString\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport getHyphenatedString from '../../utils/get-hyphenated-string'\n\nimport Note from './note'\n\nconst ListOfImplementers = ({ implementers = [], cls = ``, ruleId = `` }) => {\n\tif (!implementers.length) {\n\t\treturn (\n\t\t\t<Note cls={``} title={`No Implementations`} body={`Implementation reports are not provided for this rule.`} />\n\t\t)\n\t}\n\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Organisation</th>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(({ organisation, toolName }) => {\n\t\t\t\t\tconst filename = getHyphenatedString(toolName)\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={toolName}>\n\t\t\t\t\t\t\t<td>{toolName}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nListOfImplementers.propTypes = {\n\timplementers: PropTypes.array.isRequired,\n\tcls: PropTypes.string,\n\truleId: PropTypes.string,\n}\n\nexport default ListOfImplementers\n"],"sourceRoot":""}