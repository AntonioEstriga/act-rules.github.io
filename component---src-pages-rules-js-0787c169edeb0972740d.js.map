{"version":3,"sources":["webpack:///./src/pages/rules.js","webpack:///./src/utils/render-fragments.js"],"names":["data","rules","allRules","site","updatedTitle","siteMetadata","title","converter","showdown","Converter","keywords","className","edges","map","node","frontmatter","id","fields","name","description","input_rules","slug","fastmatterAttributes","accessibility_requirements","JSON","parse","key","href","replace","getAccessibilityRequirements","getInputRulesForRule","getImplementationsCount","dangerouslySetInnerHTML","__html","makeHtml","query","getImplementationsTabulation","implementers","cls","ruleId","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","length","getImplementationsLink","implementationMetrics","getImplementations","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","html","getGlossaryUsedLink","keys","Object","glossaryUsages","forEach","getRuleType","rule_type","type","conformanceRequirements","entries","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","target","rel","ariaListing","sc","scData","scUrls","num","url","handle","wcagType","level","wcagListing","getAuthors","authors","contributors","author","authorData","find","c","console","warn","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","inputRules","stripBasePath","inputRuleId","atomicRule","rule","getGlossaryUsageInRules","usages","usage","to","getRuleUsageInRules","rulesUsages","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate"],"mappings":"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","file":"component---src-pages-rules-js-0787c169edeb0972740d.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/'\nimport SEO from '../components/seo'\nimport showdown from 'showdown'\nimport {\n\tgetAccessibilityRequirements,\n\tgetInputRulesForRule,\n\tgetImplementationsCount,\n} from './../utils/render-fragments'\n\nexport default ({ data }) => {\n\tconst { rules, allRules, site } = data\n\tconst updatedTitle = `Rules | ${site.siteMetadata.title}`\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-container page-rules\">\n\t\t\t\t{/* Heading */}\n\t\t\t\t<h1>Rules</h1>\n\t\t\t\t{/* Table of rules */}\n\t\t\t\t<section className=\"rules-listing\">\n\t\t\t\t\t{rules.edges.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, id, fields } = node\n\t\t\t\t\t\tconst { name, description, input_rules } = frontmatter\n\t\t\t\t\t\tconst { slug, fastmatterAttributes } = fields\n\t\t\t\t\t\tconst { accessibility_requirements } = JSON.parse(fastmatterAttributes)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={id}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t{/* rule id */}\n\t\t\t\t\t\t\t\t\t<a href={slug.replace('rules/', '')}>\n\t\t\t\t\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t{/* rule sc's */}\n\t\t\t\t\t\t\t\t\t{getAccessibilityRequirements(accessibility_requirements, 'text')}\n\t\t\t\t\t\t\t\t\t{/* input rules */}\n\t\t\t\t\t\t\t\t\t{getInputRulesForRule(input_rules, allRules.edges, true)}\n\t\t\t\t\t\t\t\t\t{/* implementation count */}\n\t\t\t\t\t\t\t\t\t{getImplementationsCount(slug)}\n\t\t\t\t\t\t\t\t\t{/* rule description */}\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(description),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\trules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfileAbsolutePath\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\trule_type\n\t\t\t\t\t\tinput_rules\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(filter: { fields: { markdownType: { eq: \"rules\" } } }) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tauthor\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getAuthors(authors, contributors) {\n\tif (!authors) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"heading\">Authors</h3>\n\t\t\t<ul>\n\t\t\t\t{authors.map(author => {\n\t\t\t\t\tconst authorData = contributors.find(c => {\n\t\t\t\t\t\treturn c.name.toLowerCase() === author.toLowerCase()\n\t\t\t\t\t})\n\t\t\t\t\tif (!authorData) {\n\t\t\t\t\t\tconsole.warn(`Author ${author}, not in contributor list.`)\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\tconst { url, name } = authorData\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={name}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getGlossaryUsageInRules(usages) {\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"used-rules\">\n\t\t\t<h3>Used In Rules ({usages.length}):</h3>\n\t\t\t<ul>\n\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n"],"sourceRoot":""}