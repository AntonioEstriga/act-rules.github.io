{"version":3,"sources":["webpack:///./src/templates/rule.js"],"names":["__webpack_exports__","_ref","rule_type","data","rule","allRules","allGlossary","site","html","frontmatter","tableOfContents","fields","slug","fastmatterAttributes","accessibility_requirements","JSON","parse","converter","showdown","Converter","updatedTitle","name","siteMetadata","title","ruleId","replace","ruleTestcasesUrl","getGlossaryItemsUsedInRule","keys","Object","glossaryUsages","forEach","key","_ref2","includes","push","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","_components_layout___WEBPACK_IMPORTED_MODULE_9__","_components_seo__WEBPACK_IMPORTED_MODULE_13__","keywords","className","dangerouslySetInnerHTML","__html","makeHtml","description","usedKeys","glossaries","edges","filter","_ref3","node","length","Fragment","id","href","map","_ref4","renderGlossaryUsed","role","aria-level","getAccessibilityRequirements","getInputAspects","input_aspects","getInputRulesForRule","input_rules","getAuthors","authors","_ref5","renderGlossaryUsedLink","aria-label","target","rel","query"],"mappings":"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","file":"component---src-templates-rule-js-a4b1ab733dde4dc87800.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout/'\nimport { graphql } from 'gatsby'\nimport showdown from 'showdown'\nimport {\n\tgetAccessibilityRequirements,\n\tgetAuthors,\n\tgetInputRulesForRule,\n\tgetInputAspects,\n} from './../utils/render-fragments'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport SEO from '../components/seo'\n\nexport default ({ data }) => {\n\tconst { rule, allRules, allGlossary, site } = data\n\tconst { html, frontmatter, tableOfContents, fields } = rule\n\tconst { slug, fastmatterAttributes } = fields\n\tconst { accessibility_requirements } = JSON.parse(fastmatterAttributes)\n\tconst converter = new showdown.Converter()\n\tconst updatedTitle = `Rule | ${frontmatter.name} | ${site.siteMetadata.title}`\n\tconst ruleId = slug.replace('rules/', '')\n\tconst ruleTestcasesUrl = `/testcases/${ruleId}/rule-${ruleId}-testcases-for-em-report-tool.json`\n\n\tconst getRuleType = rule_type => {\n\t\tif (!rule_type) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\tRule Type\n\t\t\t\t</span>\n\t\t\t\t<p>{rule_type}</p>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst getGlossaryItemsUsedInRule = slug => {\n\t\tconst keys = []\n\t\tObject.keys(glossaryUsages).forEach(key => {\n\t\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\t\tkeys.push(key)\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn keys\n\t}\n\n\tconst renderGlossaryUsed = slug => {\n\t\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t\tif (!usedKeys) {\n\t\t\treturn null\n\t\t}\n\t\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\t\tconst {\n\t\t\t\tfrontmatter: { key },\n\t\t\t} = node\n\t\t\treturn usedKeys.includes(`#${key}`)\n\t\t})\n\t\tif (!glossaries.length) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<br />\n\t\t\t\t<hr />\n\t\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t\t<h2>Referenced Glossary</h2>\n\t\t\t\t</a>\n\t\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\t\tconst { key } = frontmatter\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</article>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst renderGlossaryUsedLink = slug => {\n\t\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t\tif (!usedKeys) {\n\t\t\treturn null\n\t\t}\n\t\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\t\tconst {\n\t\t\t\tfrontmatter: { key },\n\t\t\t} = node\n\t\t\treturn usedKeys.includes(`#${key}`)\n\t\t})\n\t\tif (!glossaries.length) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a href=\"#glossary-listing\">Referenced Glossary</a>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-rule\">\n\t\t\t\t{/* rule content */}\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{/* title */}\n\t\t\t\t\t\t<h1>{frontmatter.name}</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* Description */}\n\t\t\t\t\t<br />\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: converter.makeHtml(frontmatter.description),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* html content */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: html,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* glossary */}\n\t\t\t\t\t{renderGlossaryUsed(slug)}\n\t\t\t\t</section>\n\t\t\t\t{/* Toc */}\n\t\t\t\t<div className=\"toc\">\n\t\t\t\t\t{/* frontmatter */}\n\n\t\t\t\t\t<ul className=\"meta-data\">\n\t\t\t\t\t\t{getRuleType(frontmatter.rule_type)}\n\t\t\t\t\t\t<li>{getAccessibilityRequirements(accessibility_requirements)}</li>\n\t\t\t\t\t\t<li>{getInputAspects(frontmatter.input_aspects)}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t{getInputRulesForRule(\n\t\t\t\t\t\t\t\tfrontmatter.input_rules,\n\t\t\t\t\t\t\t\tallRules.edges,\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>{getAuthors(frontmatter.authors)}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\t\tTable of Contents\n\t\t\t\t\t</span>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: tableOfContents }} />\n\t\t\t\t\t<ul>{renderGlossaryUsedLink(slug)}</ul>\n\t\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\t\tDownload Testcases\n\t\t\t\t\t</span>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName=\"btn-secondary\"\n\t\t\t\t\t\t\t\taria-label=\"test cases of rule for use in wcag em report tool\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\thref={ruleTestcasesUrl}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tFor EM Report Tool\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\trule: markdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\ttableOfContents\n\t\t\tfileAbsolutePath\n\t\t\tfrontmatter {\n\t\t\t\tname\n\t\t\t\trule_type\n\t\t\t\tdescription\n\t\t\t\tinput_aspects\n\t\t\t\tinput_rules\n\t\t\t\tauthors\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t\tfastmatterAttributes\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallGlossary: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}