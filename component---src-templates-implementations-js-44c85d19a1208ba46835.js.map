{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/templates/implementations.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/utils/render-fragments.js"],"names":["$export","$entries","S","entries","it","markdownRemark","data","html","frontmatter","title","className","getImplementationsTabulation","implementers","dangerouslySetInnerHTML","__html","query","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","key","O","keys","length","i","result","call","push","cls","ruleId","map","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","href","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","getImplementationsLink","slug","replace","implementationMetrics","getImplementations","id","getImplementationsCount","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","glossaries","edges","node","getGlossaryUsedLink","Object","glossaryUsages","forEach","getRuleType","rule_type","getAccessibilityRequirements","accessibility_requirements","type","conformanceRequirements","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","target","rel","ariaListing","sc","scData","scUrls","num","url","handle","wcagType","level","wcagListing","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","find","rule","fields","name","getRuleUsageInRules","usages","rulesUsages","usage","to","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate"],"mappings":"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","file":"component---src-templates-implementations-js-44c85d19a1208ba46835.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport implementers from './../../_data/implementers'\nimport { getImplementationsTabulation } from './../utils/render-fragments'\n\nexport default ({ data }) => {\n\tconst { markdownRemark } = data\n\tconst { html, frontmatter } = markdownRemark\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={frontmatter.title} />\n\t\t\t<section className=\"page-container\">\n\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Implementation Overview</h2>\n\t\t\t\t\t{getImplementationsTabulation(implementers)}\n\t\t\t\t</section>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n"],"sourceRoot":""}