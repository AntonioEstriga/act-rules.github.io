{"version":3,"sources":["webpack:///./src/utils/render-fragments.js"],"names":["getImplementationsTabulation","implementers","cls","ruleId","className","map","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","key","href","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","length","getImplementationsLink","slug","replace","implementationMetrics","getImplementations","id","getImplementationsCount","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","edges","node","frontmatter","html","title","dangerouslySetInnerHTML","__html","getGlossaryUsedLink","keys","Object","glossaryUsages","forEach","getRuleType","rule_type","getAccessibilityRequirements","accessibility_requirements","type","conformanceRequirements","entries","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","target","rel","ariaListing","sc","scData","scUrls","num","url","handle","wcagType","level","wcagListing","getAuthors","authors","contributors","author","authorData","find","c","name","console","warn","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","rule","fields","getGlossaryUsageInRules","usages","usage","to","getRuleUsageInRules","rulesUsages","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate"],"mappings":"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","file":"3-296d30f8a93cc9906c7c.js","sourcesContent":["import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getAuthors(authors, contributors) {\n\tif (!authors) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"heading\">Authors</h3>\n\t\t\t<ul>\n\t\t\t\t{authors.map(author => {\n\t\t\t\t\tconst authorData = contributors.find(c => {\n\t\t\t\t\t\treturn c.name.toLowerCase() === author.toLowerCase()\n\t\t\t\t\t})\n\t\t\t\t\tif (!authorData) {\n\t\t\t\t\t\tconsole.warn(`Author ${author}, not in contributor list.`)\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\tconst { url, name } = authorData\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={name}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getGlossaryUsageInRules(usages) {\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"used-rules\">\n\t\t\t<h3>Used In Rules ({usages.length}):</h3>\n\t\t\t<ul>\n\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n"],"sourceRoot":""}