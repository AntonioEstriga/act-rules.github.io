{"version":3,"sources":["webpack:///./src/pages/rules.js"],"names":["__webpack_exports__","_ref","data","rules","allRules","site","edges","totalCount","updatedTitle","siteMetadata","title","converter","showdown","Converter","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout___WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","className","map","_ref2","node","frontmatter","id","fields","name","description","success_criterion","authors","atomic_rules","slug","key","href","replace","getSuccessCriterion","dangerouslySetInnerHTML","__html","makeHtml","getAtomicRulesForRule","getAuthors","query"],"mappings":"mNAWeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACTC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KACjBC,EAAsBH,EAAtBG,MAAOC,EAAeJ,EAAfI,WAETC,EAAY,WAAcH,EAAKI,aAAaC,MAC5CC,EAAY,IAAIC,IAASC,UAE/B,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKR,MAAOF,EAAcW,SAAUd,EAAKI,aAAaU,WACtDL,EAAAC,EAAAC,cAAA,WAASI,UAAU,6BAElBN,EAAAC,EAAAC,cAAA,oBAAYT,EAAZ,KAEAO,EAAAC,EAAAC,cAAA,WAASI,UAAU,iBACjBd,EAAMe,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACLC,EAA4BD,EAA5BC,YAAaC,EAAeF,EAAfE,GAAIC,EAAWH,EAAXG,OAExBC,EAKGH,EALHG,KACAC,EAIGJ,EAJHI,YACAC,EAGGL,EAHHK,kBACAC,EAEGN,EAFHM,QACAC,EACGP,EADHO,aAEOC,EAASN,EAATM,KACR,OACClB,EAAAC,EAAAC,cAAA,WAASiB,IAAKR,GACbX,EAAAC,EAAAC,cAAA,eAECF,EAAAC,EAAAC,cAAA,KAAGkB,KAAMF,EAAKG,QAAQ,SAAU,KAC/BrB,EAAAC,EAAAC,cAAA,UAAKW,IAGLS,YAAoBP,GAErBf,EAAAC,EAAAC,cAAA,OACCqB,wBAAyB,CACxBC,OAAQ3B,EAAU4B,SAASX,OAK7BY,YAAsBT,EAAc3B,EAASE,OAAO,GAEpDmC,YAAWX,UAUb,IAAMY,EAAK","file":"component---src-pages-rules-js-48e8bef45bf3b6d58d80.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/'\nimport SEO from '../components/seo'\nimport showdown from 'showdown'\nimport {\n\tgetSuccessCriterion,\n\tgetAuthors,\n\tgetAtomicRulesForRule,\n} from './../utils/render-fragments'\n\nexport default ({ data }) => {\n\tconst { rules, allRules, site } = data\n\tconst { edges, totalCount } = rules\n\n\tconst updatedTitle = `Rules | ${site.siteMetadata.title}`\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-container page-rules\">\n\t\t\t\t{/* Heading */}\n\t\t\t\t<h1>Rules ({totalCount})</h1>\n\t\t\t\t{/* Table of rules */}\n\t\t\t\t<section className=\"rules-listing\">\n\t\t\t\t\t{edges.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, id, fields } = node\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\tsuccess_criterion,\n\t\t\t\t\t\t\tauthors,\n\t\t\t\t\t\t\tatomic_rules,\n\t\t\t\t\t\t} = frontmatter\n\t\t\t\t\t\tconst { slug } = fields\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={id}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t{/* rule id */}\n\t\t\t\t\t\t\t\t\t<a href={slug.replace('rules/', '')}>\n\t\t\t\t\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t{/* rule sc's */}\n\t\t\t\t\t\t\t\t\t{getSuccessCriterion(success_criterion)}\n\t\t\t\t\t\t\t\t\t{/* rule description */}\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(description),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t{/* atomic rules */}\n\t\t\t\t\t\t\t\t{getAtomicRulesForRule(atomic_rules, allRules.edges, true)}\n\t\t\t\t\t\t\t\t{/* authors */}\n\t\t\t\t\t\t\t\t{getAuthors(authors)}\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\trules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: {\n\t\t\t\tfields: { markdownType: { eq: \"rules\" } }\n\t\t\t\tfrontmatter: { success_criterion: { ne: null } }\n\t\t\t}\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tsuccess_criterion\n\t\t\t\t\t\trule_type\n\t\t\t\t\t\tatomic_rules\n\t\t\t\t\t\tauthors\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tauthor\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}