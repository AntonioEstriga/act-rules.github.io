{"version":3,"sources":["webpack:///./src/utils/render-fragments.js","webpack:///./src/templates/changelog.js"],"names":["getImplementationsTabulation","implementers","cls","ruleId","className","map","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","key","href","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","length","getImplementationsLink","slug","replace","implementationMetrics","getImplementations","id","getImplementationsCount","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","edges","node","frontmatter","html","title","dangerouslySetInnerHTML","__html","getGlossaryUsedLink","keys","Object","glossaryUsages","forEach","getRuleType","rule_type","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","find","rule","fields","name","getRuleUsageInRules","usages","rulesUsages","usage","to","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate","getChangelogTabulation","changelog","url","file","log","hash","commit","msg","changesUrl","nowrap","align","target","rel","xmlns","x","y","width","height","viewBox","d","data","site","context","sitePage","pageTitle","fastmatterAttributes","fileName","relativePath","JSON","parse","ruleChangelog","actRulesRepoUrl","siteMetadata","actRulesPackage","repository","query"],"mappings":"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","file":"component---src-templates-changelog-js-66c32d46047150723e57.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n","import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql, Link } from 'gatsby'\nimport SEO from '../components/seo'\nimport { getDateTimeFromUnixTimestamp } from '../utils/render-fragments'\n\nconst changesSvgIcon = () => {\n\treturn (\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"16px\" height=\"16px\" viewBox=\"0 0 31.568 31.568\">\n\t\t\t<g>\n\t\t\t\t<g>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M1.889,31.568h8.282V0H1.889V31.568z M4.021,2.958h4.016V9.65H4.021V2.958z M4.021,11.964h4.016v2.776H4.021V11.964z\n          M6.029,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C4.021,25.494,4.92,24.596,6.029,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M11.643,31.568h8.282V0h-8.282V31.568z M13.777,2.958h4.016V9.65h-4.016V2.958z M13.777,11.964h4.016v2.776h-4.016V11.964\n          z M15.784,24.596c1.11,0,2.009,0.897,2.009,2.008c0,1.107-0.898,2.008-2.009,2.008c-1.108,0-2.007-0.9-2.007-2.008\n          C13.777,25.494,14.676,24.596,15.784,24.596z\"\n\t\t\t\t\t/>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M21.397,0v31.568h8.282V0H21.397z M25.539,28.611c-1.108,0-2.008-0.9-2.008-2.008c0-1.11,0.898-2.008,2.008-2.008\n          c1.11,0,2.009,0.897,2.009,2.008C27.548,27.711,26.648,28.611,25.539,28.611z M27.548,14.74h-4.017v-2.776h4.017V14.74z\n          M27.548,9.651h-4.017V2.958h4.017V9.651z\"\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t</svg>\n\t)\n}\n\nconst getChangelogTabulation = (changelog, url, file) => {\n\tif (!changelog.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<table className=\"compact\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t<th>Description</th>\n\t\t\t\t\t<th>See Changes</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{changelog.map(log => {\n\t\t\t\t\tconst { commit: hash, msg, date } = log\n\t\t\t\t\tconst changesUrl = `${url}/commit/${hash}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={hash}>\n\t\t\t\t\t\t\t<td nowrap=\"true\">{getDateTimeFromUnixTimestamp(date)}</td>\n\t\t\t\t\t\t\t<td>{msg}</td>\n\t\t\t\t\t\t\t<td align=\"center\">\n\t\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={changesUrl} title=\"See all changes in commit\">\n\t\t\t\t\t\t\t\t\t{changesSvgIcon()}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nexport default ({ data }) => {\n\tconst { site, sitePage } = data\n\tconst { context } = sitePage\n\tconst { title: pageTitle, fastmatterAttributes, changelog, fileName } = context\n\n\tconst { relativePath: ruleMarkdownFileName } = fileName\n\n\tconst frontmatter = JSON.parse(fastmatterAttributes)\n\tconst { id: ruleId, name } = frontmatter\n\n\tconst ruleChangelog = JSON.parse(changelog)\n\tconst {\n\t\trepository: { url: actRulesRepoUrl },\n\t} = JSON.parse(site.siteMetadata.actRulesPackage)\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={pageTitle} />\n\t\t\t<section className=\"page-container page-rule-changelog\">\n\t\t\t\t<h1>{pageTitle}</h1>\n\n\t\t\t\t{/* changelog */}\n\t\t\t\t{getChangelogTabulation(ruleChangelog, actRulesRepoUrl, `_rules/${ruleMarkdownFileName}`)}\n\n\t\t\t\t{/* backlink to rule */}\n\t\t\t\t<br />\n\n\t\t\t\t<Link to={`/rules/${ruleId}`}>See Rule: {name}</Link>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($path: String!) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tslug\n\t\t\t\ttitle\n\t\t\t\tchangelog\n\t\t\t\tfastmatterAttributes\n\t\t\t\tfileName {\n\t\t\t\t\trelativePath\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tactRulesPackage\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}