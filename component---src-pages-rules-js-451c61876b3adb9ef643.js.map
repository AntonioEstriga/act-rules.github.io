{"version":3,"sources":["webpack:///./src/pages/rules.js"],"names":["__webpack_exports__","_ref","data","rules","allRules","site","toListRules","edges","filter","_ref2","fastmatterAttributes","node","fields","JSON","parse","accessibility_requirements","updatedTitle","siteMetadata","title","converter","showdown","Converter","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout___WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","className","map","_ref3","frontmatter","id","name","description","input_rules","slug","key","href","replace","getAccessibilityRequirements","dangerouslySetInnerHTML","__html","makeHtml","getInputRulesForRule","query"],"mappings":"mNAUeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACTC,EAA0BD,EAA1BC,MAAOC,EAAmBF,EAAnBE,SAAUC,EAASH,EAATG,KACnBC,EAAcH,EAAMI,MAAMC,OAAO,SAAAC,GAAc,IAE5CC,EAF4CD,EAAXE,KACjCC,OACAF,qBAER,QADuCG,KAAKC,MAAMJ,GAA1CK,6BAIHC,EAAY,WAAcX,EAAKY,aAAaC,MAC5CC,EAAY,IAAIC,IAASC,UAE/B,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACCH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKR,MAAOF,EAAcW,SAAUtB,EAAKY,aAAaU,WACtDL,EAAAC,EAAAC,cAAA,WAASI,UAAU,6BAElBN,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,WAASI,UAAU,iBACjBtB,EAAYuB,IAAI,SAAAC,GAAc,IAAXnB,EAAWmB,EAAXnB,KACXoB,EAA4BpB,EAA5BoB,YAAaC,EAAerB,EAAfqB,GAAIpB,EAAWD,EAAXC,OACjBqB,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,YACnBC,EAA+BxB,EAA/BwB,KAAM1B,EAAyBE,EAAzBF,qBACNK,EAA+BF,KAAKC,MAC3CJ,GADOK,2BAGR,OACCO,EAAAC,EAAAC,cAAA,WAASa,IAAKL,GACbV,EAAAC,EAAAC,cAAA,eAECF,EAAAC,EAAAC,cAAA,KAAGc,KAAMF,EAAKG,QAAQ,SAAU,KAC/BjB,EAAAC,EAAAC,cAAA,UAAKS,IAGLO,YAA6BzB,GAE9BO,EAAAC,EAAAC,cAAA,OACCiB,wBAAyB,CACxBC,OAAQvB,EAAUwB,SAAST,OAK7BU,YAAqBT,EAAa/B,EAASG,OAAO,UAUpD,IAAMsC,EAAK","file":"component---src-pages-rules-js-451c61876b3adb9ef643.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/'\nimport SEO from '../components/seo'\nimport showdown from 'showdown'\nimport {\n\tgetAccessibilityRequirements,\n\tgetInputRulesForRule,\n} from './../utils/render-fragments'\n\nexport default ({ data }) => {\n\tconst { rules, allRules, site } = data\n\tconst toListRules = rules.edges.filter(({ node }) => {\n\t\tconst { fields } = node\n\t\tconst { fastmatterAttributes } = fields\n\t\tconst { accessibility_requirements } = JSON.parse(fastmatterAttributes)\n\t\treturn !!accessibility_requirements\n\t})\n\n\tconst updatedTitle = `Rules | ${site.siteMetadata.title}`\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-container page-rules\">\n\t\t\t\t{/* Heading */}\n\t\t\t\t<h1>Rules</h1>\n\t\t\t\t{/* Table of rules */}\n\t\t\t\t<section className=\"rules-listing\">\n\t\t\t\t\t{toListRules.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, id, fields } = node\n\t\t\t\t\t\tconst { name, description, input_rules } = frontmatter\n\t\t\t\t\t\tconst { slug, fastmatterAttributes } = fields\n\t\t\t\t\t\tconst { accessibility_requirements } = JSON.parse(\n\t\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={id}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t{/* rule id */}\n\t\t\t\t\t\t\t\t\t<a href={slug.replace('rules/', '')}>\n\t\t\t\t\t\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t{/* rule sc's */}\n\t\t\t\t\t\t\t\t\t{getAccessibilityRequirements(accessibility_requirements)}\n\t\t\t\t\t\t\t\t\t{/* rule description */}\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(description),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t{/* atomic rules */}\n\t\t\t\t\t\t\t\t{getInputRulesForRule(input_rules, allRules.edges, true)}\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\trules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfileAbsolutePath\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\trule_type\n\t\t\t\t\t\tinput_rules\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tauthor\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}