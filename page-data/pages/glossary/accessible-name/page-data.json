{"componentChunkName":"component---src-templates-glossary-js","path":"/pages/glossary/accessible-name/","webpackCompilationHash":"0d491e9f3890e5d014a4","result":{"data":{"markdownRemark":{"html":"<p>The programmatically determined name of a user interface element that is <a href=\"#included-in-the-accessibility-tree\">included in the accessibility tree</a>.</p>\n<p>The accessible name is calculated using the <a href=\"https://www.w3.org/TR/accname\">accessible name and description computation</a>.</p>\n<p>For native markup languages, such as HTML and SVG, additional information on how to calculate the accessible name can be found in <a href=\"https://www.w3.org/TR/html-aam/#accessible-name-and-description-computation\">HTML Accessibility API Mappings 1.0, Accessible Name and Description Computation (working draft)</a> and <a href=\"https://www.w3.org/TR/svg-aam/#mapping_additional\">SVG Accessibility API Mappings, Name and Description (working draft)</a>.</p>\n<p><strong>Note</strong>: As per the <a href=\"https://www.w3.org/TR/accname\">accessible name and description computation</a>, each element always has an accessible name. When no accessible name is provided, the element will nonetheless be assigned an empty (<code class=\"language-text\">&quot;&quot;</code>) one.</p>\n<p><strong>Note</strong>: As per the <a href=\"https://www.w3.org/TR/accname\">accessible name and description computation</a>, accessible names are <a href=\"https://www.w3.org/TR/accname-1.1/#terminology\">flat string</a> trimmed of leading and trailing whitespace. Notably, it is not possible for a non-empty accessible name to be composed only of whitespace since these must be trimmed.</p>\n<h4 id=\"accessibility-support\"><a href=\"#accessibility-support\" aria-label=\"accessibility support permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Accessibility Support</h4>\n<ul>\n<li>Because the <a href=\"https://www.w3.org/TR/accname\">accessible name and description computation</a> is not clear about which whitespace are considered, browsers behave differently when trimming and flattening the accessible name. For example, some browsers completely trim non-breaking spaces while some keep them in the accessible name.</li>\n<li>There exists a popular browser which does not perform the same trimming and flattening depending whether the accessible name comes from content, an <code class=\"language-text\">aria-label</code> attribute, or an <code class=\"language-text\">alt</code> attribute.</li>\n<li>There exists a popular browser which assign no accessible name (<code class=\"language-text\">null</code>) when none is provided, instead of assigned an empty accessible name (<code class=\"language-text\">&quot;&quot;</code>).</li>\n</ul>","frontmatter":{"title":"Accessible Name"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"pages/glossary/accessible-name/","fileName":null,"sourceInstanceName":"pages","markdownType":"glossary","fastmatterAttributes":"{\"title\":\"Accessible Name\",\"key\":\"accessible-name\"}","changelog":null,"title":"Accessible Name","ruleType":null}}}