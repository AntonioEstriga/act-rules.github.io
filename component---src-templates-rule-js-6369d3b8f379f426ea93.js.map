{"version":3,"sources":["webpack:///./src/templates/rule.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js"],"names":["__webpack_exports__","_ref","rule_type","data","rule","allRules","allGlossary","site","html","frontmatter","tableOfContents","slug","fields","converter","showdown","Converter","updatedTitle","name","siteMetadata","title","getGlossaryItemsUsedInRule","keys","Object","glossaryUsages","forEach","key","_ref2","includes","push","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_layout___WEBPACK_IMPORTED_MODULE_8__","_components_seo__WEBPACK_IMPORTED_MODULE_12__","keywords","className","dangerouslySetInnerHTML","__html","makeHtml","description","usedKeys","glossaries","edges","filter","_ref3","node","length","Fragment","id","href","map","_ref4","renderGlossaryUsed","role","aria-level","getSuccessCriterion","success_criterion","getTestAspects","test_aspects","getAtomicRulesForRule","atomic_rules","getAuthors","authors","_ref5","renderGlossaryUsedLink","query","toObject","__webpack_require__","$keys","it","$export","core","fails","module","exports","KEY","exec","fn","exp","S","F"],"mappings":"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","file":"component---src-templates-rule-js-6369d3b8f379f426ea93.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout/'\nimport { graphql } from 'gatsby'\nimport showdown from 'showdown'\nimport {\n\tgetSuccessCriterion,\n\tgetAuthors,\n\tgetAtomicRulesForRule,\n\tgetTestAspects,\n} from './../utils/render-fragments'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport SEO from '../components/seo'\n\nexport default ({ data }) => {\n\tconst { rule, allRules, allGlossary, site } = data\n\tconst { html, frontmatter, tableOfContents, fields } = rule\n\tconst { slug } = fields\n\tconst converter = new showdown.Converter()\n\tconst updatedTitle = `Rule | ${frontmatter.name} | ${site.siteMetadata.title}`\n\n\tconst getRuleType = rule_type => {\n\t\tif (!rule_type) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\tRule Type\n\t\t\t\t</span>\n\t\t\t\t<p>{rule_type}</p>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst getGlossaryItemsUsedInRule = slug => {\n\t\tconst keys = []\n\t\tObject.keys(glossaryUsages).forEach(key => {\n\t\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\t\tkeys.push(key)\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\treturn keys\n\t}\n\n\tconst renderGlossaryUsed = slug => {\n\t\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t\tif (!usedKeys) {\n\t\t\treturn null\n\t\t}\n\t\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\t\tconst {\n\t\t\t\tfrontmatter: { key },\n\t\t\t} = node\n\t\t\treturn usedKeys.includes(`#${key}`)\n\t\t})\n\t\tif (!glossaries.length) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<br />\n\t\t\t\t<hr />\n\t\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t\t<h2>Referenced Glossary</h2>\n\t\t\t\t</a>\n\t\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\t\tconst { key } = frontmatter\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{frontmatter.title}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</article>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</>\n\t\t)\n\t}\n\n\tconst renderGlossaryUsedLink = slug => {\n\t\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t\tif (!usedKeys) {\n\t\t\treturn null\n\t\t}\n\t\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\t\tconst {\n\t\t\t\tfrontmatter: { key },\n\t\t\t} = node\n\t\t\treturn usedKeys.includes(`#${key}`)\n\t\t})\n\t\tif (!glossaries.length) {\n\t\t\treturn null\n\t\t}\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<a href=\"#glossary-listing\">Referenced Glossary</a>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-rule\">\n\t\t\t\t{/* rule content */}\n\t\t\t\t<section>\n\t\t\t\t\t{/* title */}\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h1>{frontmatter.name}</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* Description */}\n\t\t\t\t\t<br />\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: converter.makeHtml(frontmatter.description),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* html content */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: html,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* glossary */}\n\t\t\t\t\t{renderGlossaryUsed(slug)}\n\t\t\t\t</section>\n\t\t\t\t{/* Toc */}\n\t\t\t\t<div className=\"toc\">\n\t\t\t\t\t{/* frontmatter */}\n\n\t\t\t\t\t<ul className=\"meta-data\">\n\t\t\t\t\t\t{getRuleType(frontmatter.rule_type)}\n\t\t\t\t\t\t<li>{getSuccessCriterion(frontmatter.success_criterion)}</li>\n\t\t\t\t\t\t<li>{getTestAspects(frontmatter.test_aspects)}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t{getAtomicRulesForRule(\n\t\t\t\t\t\t\t\tfrontmatter.atomic_rules,\n\t\t\t\t\t\t\t\tallRules.edges,\n\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>{getAuthors(frontmatter.authors)}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\t\tTable of Contents\n\t\t\t\t\t</span>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: tableOfContents }} />\n\t\t\t\t\t<ul>{renderGlossaryUsedLink(slug)}</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\trule: markdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\ttableOfContents\n\t\t\tfrontmatter {\n\t\t\t\tname\n\t\t\t\trule_type\n\t\t\t\tdescription\n\t\t\t\tsuccess_criterion\n\t\t\t\ttest_aspects\n\t\t\t\tatomic_rules\n\t\t\t\tauthors\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tslug\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallGlossary: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}