{"version":3,"sources":["webpack:///./src/templates/implementations.js","webpack:///./src/utils/render-fragments.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["markdownRemark","data","html","frontmatter","title","className","getImplementationsTabulation","implementers","dangerouslySetInnerHTML","__html","query","cls","ruleId","map","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","key","href","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","length","getImplementationsLink","slug","replace","implementationMetrics","getImplementations","id","getImplementationsCount","getGlossaryUsed","allGlossary","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","edges","node","getGlossaryUsedLink","keys","Object","glossaryUsages","forEach","getRuleType","rule_type","getAccessibilityRequirements","accessibility_requirements","type","conformanceRequirements","entries","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","target","rel","ariaListing","sc","scData","scUrls","num","url","handle","wcagType","level","wcagListing","getInputAspects","aspects","ruleFormatInputAspects","aspect","aHref","getInputRulesForRule","inputRules","allRules","stripBasePath","inputRuleId","atomicRule","find","rule","fields","name","getRuleUsageInRules","usages","rulesUsages","usage","to","getDateTimeFromUnixTimestamp","unixtimestamp","date","Date","year","getFullYear","getMonth","getDate","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","i","result","call"],"mappings":"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","file":"component---src-templates-implementations-js-74a06fbf689f366c39d3.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport implementers from './../../_data/implementers'\nimport { getImplementationsTabulation } from './../utils/render-fragments'\n\nexport default ({ data }) => {\n\tconst { markdownRemark } = data\n\tconst { html, frontmatter } = markdownRemark\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={frontmatter.title} />\n\t\t\t<section className=\"page-container\">\n\t\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Implementation Overview</h2>\n\t\t\t\t\t{getImplementationsTabulation(implementers)}\n\t\t\t\t</section>\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}