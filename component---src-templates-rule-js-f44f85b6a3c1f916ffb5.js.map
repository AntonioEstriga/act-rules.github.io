{"version":3,"sources":["webpack:///./src/templates/rule.js","webpack:///./src/utils/render-fragments.js"],"names":["data","rule","allRules","allGlossary","site","html","frontmatter","tableOfContents","fields","slug","fastmatterAttributes","changelog","relativePath","fileName","ruleChangelog","JSON","parse","accessibility_requirements","converter","showdown","Converter","updatedTitle","name","siteMetadata","title","ruleId","id","ruleTestcasesUrl","proposeChangeUrl","repository","url","changelogUrl","issuesUrl","ruleFormatInputAspects","config","keywords","className","getRuleType","rule_type","getDateTimeFromUnixTimestamp","date","getAccessibilityRequirements","getRuleUsageInRules","getInputAspects","input_aspects","getInputRulesForRule","input_rules","edges","href","aria-label","aria-hidden","focusable","height","viewBox","width","fillRule","d","dangerouslySetInnerHTML","__html","makeHtml","description","getGlossaryUsed","target","rel","getImplementations","getAuthors","authors","contributors","role","aria-level","getGlossaryUsedLink","getImplementationsLink","query","getImplementationsTabulation","implementers","cls","map","row","organisation","tool","filename","split","join","toLowerCase","reportUrl","key","getCompleteImplementations","metrics","filter","metric","implementation","complete","incorrect","length","replace","implementationMetrics","getImplementationsCount","usedKeys","getGlossaryItemsUsedInRule","includes","push","glossaries","node","keys","Object","glossaryUsages","forEach","type","conformanceRequirements","entries","value","forConformance","getOutcomeMapping","failed","passed","inapplicable","req","mapping","listType","ref","slice","pop","ariaListing","sc","scData","scUrls","num","handle","wcagType","level","wcagListing","author","authorData","find","c","console","warn","aspects","aspect","aHref","inputRules","stripBasePath","inputRuleId","atomicRule","getGlossaryUsageInRules","usages","usage","to","rulesUsages","unixtimestamp","Date","year","getFullYear","getMonth","getDate"],"mappings":"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","file":"component---src-templates-rule-js-f44f85b6a3c1f916ffb5.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout/'\nimport { graphql } from 'gatsby'\nimport showdown from 'showdown'\nimport {\n\tgetGlossaryUsed,\n\tgetRuleUsageInRules,\n\tgetGlossaryUsedLink,\n\tgetRuleType,\n\tgetAccessibilityRequirements,\n\tgetAuthors,\n\tgetInputRulesForRule,\n\tgetInputAspects,\n\tgetImplementations,\n\tgetImplementationsLink,\n\tgetDateTimeFromUnixTimestamp,\n} from './../utils/render-fragments'\nimport SEO from '../components/seo'\nimport { contributors, repository, config } from './../../package.json'\n\nexport default ({ data }) => {\n\tconst { rule, allRules, allGlossary, site } = data\n\tconst { html, frontmatter, tableOfContents, fields } = rule\n\tconst { slug, fastmatterAttributes, changelog, fileName } = fields\n\tconst { relativePath } = fileName\n\tconst ruleChangelog = JSON.parse(changelog)\n\tconst { accessibility_requirements } = JSON.parse(fastmatterAttributes)\n\tconst converter = new showdown.Converter()\n\tconst updatedTitle = `Rule | ${frontmatter.name} | ${site.siteMetadata.title}`\n\tconst ruleId = frontmatter.id\n\tconst ruleTestcasesUrl = `/testcases/${ruleId}/rule-${ruleId}-testcases-for-em-report-tool.json`\n\tconst proposeChangeUrl = `${repository.url}/edit/develop/_rules/${relativePath}`\n\tconst changelogUrl = `/rules/${ruleId}/changelog`\n\tconst issuesUrl = `${repository.url}/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+${ruleId}+`\n\tconst ruleFormatInputAspects = config['rule-format-metadata']['input-aspects']\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-rule\">\n\t\t\t\t{/* rule content */}\n\t\t\t\t<section>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t{/* title */}\n\t\t\t\t\t\t<h1>{frontmatter.name}</h1>\n\t\t\t\t\t</header>\n\t\t\t\t\t{/* frontmatter */}\n\t\t\t\t\t<ul className=\"meta\">\n\t\t\t\t\t\t{getRuleType(frontmatter.rule_type)}\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span className=\"heading\">Rule ID:</span>\n\t\t\t\t\t\t\t<span> {ruleId}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span className=\"heading\">Last modified:</span>\n\t\t\t\t\t\t\t<span> {getDateTimeFromUnixTimestamp(ruleChangelog[0].date)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>{getAccessibilityRequirements(accessibility_requirements)}</li>\n\t\t\t\t\t\t<li>{getRuleUsageInRules(ruleId)}</li>\n\t\t\t\t\t\t<li>{getInputAspects(frontmatter.input_aspects, ruleFormatInputAspects)}</li>\n\t\t\t\t\t\t<li>{getInputRulesForRule(frontmatter.input_rules, allRules.edges, true)}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* Description */}\n\t\t\t\t\t<h2 id=\"description\">\n\t\t\t\t\t\t<a href=\"#description\" aria-label=\"description permalink\" className=\"anchor\">\n\t\t\t\t\t\t\t<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\">\n\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\t\t\t\td=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n\t\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\tDescription\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: converter.makeHtml(frontmatter.description),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* html content */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: html,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* glossary */}\n\t\t\t\t\t{getGlossaryUsed(slug, allGlossary)}\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* Useful links */}\n\t\t\t\t\t<a href=\"#useful-links\" id=\"useful-links\">\n\t\t\t\t\t\t<h2>Useful Links</h2>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={issuesUrl}>\n\t\t\t\t\t\t\t\tGithub issues related to this rule\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a rel=\"noopener noreferrer\" href={changelogUrl}>\n\t\t\t\t\t\t\t\tChangelog\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={proposeChangeUrl}>\n\t\t\t\t\t\t\t\tPropose a change to the rule\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={ruleTestcasesUrl}>\n\t\t\t\t\t\t\t\tTest case file for use in the WCAG-EM Report Tool\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<hr />\n\t\t\t\t\t{/* implementations */}\n\t\t\t\t\t{getImplementations(slug)}\n\t\t\t\t\t{/* acknowledgements */}\n\t\t\t\t\t<hr />\n\t\t\t\t\t<a id=\"acknowledgements\" href=\"#acknowledgements\">\n\t\t\t\t\t\t<h2>Acknowledgements</h2>\n\t\t\t\t\t</a>\n\t\t\t\t\t<div className=\"meta\">{getAuthors(frontmatter.authors, contributors)}</div>\n\t\t\t\t</section>\n\t\t\t\t{/* Toc */}\n\t\t\t\t<div className=\"toc\">\n\t\t\t\t\t{/* todo:jey needs fixing up */}\n\t\t\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\t\t\tTable of Contents\n\t\t\t\t\t</span>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: tableOfContents }} />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{/* glossary */}\n\t\t\t\t\t\t{getGlossaryUsedLink(slug, allGlossary)}\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"#useful-links\">Useful Links</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{/* implementations */}\n\t\t\t\t\t\t{getImplementationsLink(slug)}\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"#acknowledgements\">Acknowledgements</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\trule: markdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\ttableOfContents\n\t\t\tfrontmatter {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\trule_type\n\t\t\t\tdescription\n\t\t\t\tinput_aspects\n\t\t\t\tinput_rules\n\t\t\t\tauthors\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tfileName {\n\t\t\t\t\trelativePath\n\t\t\t\t}\n\t\t\t\tslug\n\t\t\t\tfastmatterAttributes\n\t\t\t\tchangelog\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(filter: { fields: { markdownType: { eq: \"rules\" } } }) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallGlossary: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport scUrls from './../../_data/sc-urls'\nimport { Link } from 'gatsby'\nimport glossaryUsages from './../../_data/glossary-usages.json'\nimport implementationMetrics from './../../_data/implementation-metrics.json'\n\nimport rulesUsages from './../../_data/rules-usages.json'\n\nexport const getImplementationsTabulation = (implementers, cls = 'compact', ruleId) => {\n\treturn (\n\t\t<table className={cls}>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Tool Name</th>\n\t\t\t\t\t<th>Created By</th>\n\t\t\t\t\t<th>Report</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{implementers.map(row => {\n\t\t\t\t\tconst { organisation, tool } = row\n\t\t\t\t\tconst filename = tool\n\t\t\t\t\t\t.split(' ')\n\t\t\t\t\t\t.join('-')\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\tconst reportUrl = ruleId ? `/implementation/${filename}#${ruleId}` : `/implementation/${filename}`\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={tool}>\n\t\t\t\t\t\t\t<td>{tool}</td>\n\t\t\t\t\t\t\t<td>{organisation}</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<a href={reportUrl}>View Report</a>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst getCompleteImplementations = metrics => {\n\treturn metrics.filter(metric => {\n\t\tconst implementation = metric.implementation[0]\n\t\tconst { complete, incorrect } = implementation\n\t\treturn !!complete && !incorrect.length\n\t})\n}\n\nexport const getImplementationsLink = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#implementation-metrics\">Implementations ({getCompleteImplementations(metrics).length})</a>\n\t\t</li>\n\t)\n}\n\nexport const getImplementations = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t<h2>Implementations</h2>\n\t\t\t</a>\n\t\t\t{getImplementationsTabulation(getCompleteImplementations(metrics), 'compact', ruleId)}\n\t\t</>\n\t)\n}\n\nexport const getImplementationsCount = slug => {\n\tconst ruleId = slug.replace('rules/', '')\n\tconst metrics = implementationMetrics[ruleId]\n\tif (!metrics) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Implementations: {getCompleteImplementations(metrics).length}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<i>\n\t\t\t\t\t\t\tkey: <u>{key}</u>\n\t\t\t\t\t\t</i>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryUsedLink = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\tif (!usedKeys) {\n\t\treturn null\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t</li>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n\nexport function getRuleType(rule_type) {\n\tif (!rule_type) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<li>\n\t\t\t<span className=\"heading\">Rule Type</span>\n\t\t\t<span>{rule_type}</span>\n\t\t</li>\n\t)\n}\n\nexport function getAccessibilityRequirements(accessibility_requirements, type = 'details') {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst conformanceRequirements = Object.entries(accessibility_requirements).filter(([_, value]) => {\n\t\tif (!value) {\n\t\t\treturn false\n\t\t}\n\t\tconst { forConformance } = value\n\t\treturn !!forConformance\n\t})\n\n\tconst getOutcomeMapping = ({\n\t\tfailed = 'not satisfied',\n\t\tpassed = 'further testing is needed',\n\t\tinapplicable = 'further testing is needed',\n\t} = {}) => {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\tOutcome mapping:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAny <code>failed</code> outcomes: {failed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAll <code>passed</code> outcomes: {passed}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tAn <code>inapplicable</code> outcome: {inapplicable}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst wcagListing = (sc, listType) => {\n\t\tconst scData = scUrls[sc]\n\n\t\tconst { num, url, handle, wcagType, level } = scData\n\n\t\tif (listType === 'text') {\n\t\t\treturn (\n\t\t\t\t<li key={sc}>\n\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={sc}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>\n\t\t\t\t\t\t{num} {handle} (Level: {level})\n\t\t\t\t\t</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {num} ({handle})\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping()}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\tconst ariaListing = (key, mapping, listType) => {\n\t\tconst ref = key\n\t\t\t.split(':')\n\t\t\t.slice(-1)\n\t\t\t.pop()\n\n\t\tif (listType === 'text') {\n\t\t\treturn <li key={ref}>{mapping.title}</li>\n\t\t}\n\n\t\tconst href = `https://www.w3.org/TR/wai-aria-1.1/#${ref}`\n\t\treturn (\n\t\t\t<li key={ref}>\n\t\t\t\t<details>\n\t\t\t\t\t<summary>{mapping.title}</summary>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a className=\"sc-item\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\tLearn More about {mapping.title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<strong>Required for conformance</strong>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{getOutcomeMapping(mapping)}\n\t\t\t\t\t</ul>\n\t\t\t\t</details>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping</span>\n\t\t\t<ul>\n\t\t\t\t{conformanceRequirements.map(([req, mapping]) => {\n\t\t\t\t\tif (req.toLowerCase().includes('aria11')) {\n\t\t\t\t\t\treturn ariaListing(req, mapping, type)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (req.toLowerCase().includes('wcag')) {\n\t\t\t\t\t\tconst sc = req.split(':').pop()\n\t\t\t\t\t\treturn wcagListing(sc, type)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>Accessibility Requirements have no mapping.</>\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getAuthors(authors, contributors) {\n\tif (!authors) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h3 className=\"heading\">Authors</h3>\n\t\t\t<ul>\n\t\t\t\t{authors.map(author => {\n\t\t\t\t\tconst authorData = contributors.find(c => {\n\t\t\t\t\t\treturn c.name.toLowerCase() === author.toLowerCase()\n\t\t\t\t\t})\n\t\t\t\t\tif (!authorData) {\n\t\t\t\t\t\tconsole.warn(`Author ${author}, not in contributor list.`)\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\tconst { url, name } = authorData\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={name}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getInputAspects(aspects, ruleFormatInputAspects) {\n\tif (!aspects) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<span className=\"heading\">Input Aspects</span>\n\t\t\t<ul>\n\t\t\t\t{aspects.map(aspect => {\n\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport function getInputRulesForRule(inputRules, allRules, stripBasePath = false) {\n\tif (!inputRules) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Input Rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{inputRules.map(inputRuleId => {\n\t\t\t\t\t\tconst atomicRule = allRules.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\tconst aHref = stripBasePath\n\t\t\t\t\t\t\t? atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t: atomicRule.node.fields.slug\n\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function getGlossaryUsageInRules(usages) {\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"used-rules\">\n\t\t\t<h3>Used In Rules ({usages.length}):</h3>\n\t\t\t<ul>\n\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\nexport function getRuleUsageInRules(ruleId) {\n\tconst usages = rulesUsages[ruleId]\n\tif (!usages) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Used in rules</span>\n\t\t\t\t<ul>\n\t\t\t\t\t{usages.map(usage => (\n\t\t\t\t\t\t<li key={usage.slug}>\n\t\t\t\t\t\t\t<Link key={usage.slug} to={usage.slug}>\n\t\t\t\t\t\t\t\t{usage.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n/**\n * Get formatted date from unix timestamp\n * @param {String} unixtimestamp UNIX timestamp\n */\nexport function getDateTimeFromUnixTimestamp(unixtimestamp) {\n\tconst months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\tconst date = new Date(unixtimestamp * 1000)\n\tconst year = date.getFullYear()\n\tconst month = months_arr[date.getMonth()]\n\tconst day = date.getDate()\n\n\treturn `${month} ${day}, ${year}`\n}\n"],"sourceRoot":""}