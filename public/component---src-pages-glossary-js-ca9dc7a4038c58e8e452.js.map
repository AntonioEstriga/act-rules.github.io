{"version":3,"sources":["webpack:///./src/pages/glossary.js","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout___WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_utils_render_fragments__WEBPACK_IMPORTED_MODULE_3__","_data_glossary_usages_json__WEBPACK_IMPORTED_MODULE_4__","_ref","data","glossaryData","site","edges","updatedTitle","siteMetadata","title","a","createElement","keywords","className","map","_ref2","node","frontmatter","html","key","usedInRules","glossaryUsages","id","href","dangerouslySetInnerHTML","__html","getGlossaryUsageInRules","$export","$find","forced","Array","P","F","find","callbackfn","this","arguments","length","undefined","$entries","S","entries","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","i","result","call","push"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOeE,EAAA,iBAAAU,GAAc,IAAXC,EAAWD,EAAXC,KACTC,EAAuBD,EAAvBC,aAAcC,EAASF,EAATE,KACdC,EAAUF,EAAVE,MACFC,EAAY,cAAiBF,EAAKG,aAAaC,MAErD,OACCb,EAAAc,EAAAC,cAACb,EAAA,EAAD,KACCF,EAAAc,EAAAC,cAACZ,EAAA,EAAD,CAAKU,MAAOF,EAAcK,SAAUP,EAAKG,aAAaI,WACtDhB,EAAAc,EAAAC,cAAA,WAASE,UAAU,gCAClBjB,EAAAc,EAAAC,cAAA,sBACAf,EAAAc,EAAAC,cAAA,WAASE,UAAU,WACjBP,EAAMQ,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACLC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACbC,EAAQF,EAARE,IACFC,EAAcC,EAAc,IAAKF,GACvC,OACCvB,EAAAc,EAAAC,cAAA,WAASQ,IAAKH,EAAKM,IAClB1B,EAAAc,EAAAC,cAAA,eACCf,EAAAc,EAAAC,cAAA,KAAGW,GAAIH,EAAKI,KAAI,IAAMJ,GACrBvB,EAAAc,EAAAC,cAAA,UAAKM,EAAYR,QAElBb,EAAAc,EAAAC,cAAA,iBAASQ,GACTvB,EAAAc,EAAAC,cAAA,OAAKa,wBAAyB,CAAEC,OAAQP,MAExCQ,YAAwBN,UAU1B,IAAM1B,EAAK,8CCvClB,IAAAiC,EAAcrC,EAAQ,GACtBsC,EAAYtC,EAAQ,GAARA,CAA0B,GAEtCuC,GAAA,EADA,QAGA,IAAAC,MAAA,mBAA0CD,GAAA,IAC1CF,IAAAI,EAAAJ,EAAAK,EAAAH,EAAA,SACAI,KAAA,SAAAC,GACA,OAAAN,EAAAO,KAAAD,EAAAE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,MAGAhD,EAAQ,GAARA,CATA,6BCHA,IAAAqC,EAAcrC,EAAQ,GACtBiD,EAAejD,EAAQ,IAARA,EAA4B,GAE3CqC,IAAAa,EAAA,UACAC,QAAA,SAAAC,GACA,OAAAH,EAAAG,2BCNA,IAAAC,EAAkBrD,EAAQ,GAC1BsD,EAActD,EAAQ,IACtBuD,EAAgBvD,EAAQ,IACxBwD,EAAaxD,EAAQ,IAAeyD,EACpCC,EAAAC,QAAA,SAAAC,GACA,gBAAAR,GAOA,IANA,IAKAvB,EALAgC,EAAAN,EAAAH,GACAU,EAAAR,EAAAO,GACAd,EAAAe,EAAAf,OACAgB,EAAA,EACAC,EAAA,GAEAjB,EAAAgB,GACAlC,EAAAiC,EAAAC,KACAV,IAAAG,EAAAS,KAAAJ,EAAAhC,IACAmC,EAAAE,KAAAN,EAAA,CAAA/B,EAAAgC,EAAAhC,IAAAgC,EAAAhC,IAGA,OAAAmC","file":"component---src-pages-glossary-js-ca9dc7a4038c58e8e452.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/'\nimport SEO from '../components/seo'\nimport { getGlossaryUsageInRules } from './../utils/render-fragments'\nimport glossaryUsages from './../../_data/glossary-usages.json'\n\nexport default ({ data }) => {\n\tconst { glossaryData, site } = data\n\tconst { edges } = glossaryData\n\tconst updatedTitle = `Glossary | ${site.siteMetadata.title}`\n\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO title={updatedTitle} keywords={site.siteMetadata.keywords} />\n\t\t\t<section className=\"page-container page-glossary\">\n\t\t\t\t<h1>Glossary</h1>\n\t\t\t\t<section className=\"listing\">\n\t\t\t\t\t{edges.map(({ node }) => {\n\t\t\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\t\t\tconst { key } = frontmatter\n\t\t\t\t\t\tconst usedInRules = glossaryUsages[`#${key}`]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t\t\t\t<h2>{frontmatter.title}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<i>key: {key}</i>\n\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t{getGlossaryUsageInRules(usedInRules)}\n\t\t\t\t\t\t\t</article>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\tglossaryData: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t\tkeywords\n\t\t\t}\n\t\t}\n\t}\n`\n","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}